name: Delete Art

on:
  workflow_dispatch:
    inputs:
      filenames:
        description: 'Names of the files to delete (without folder path and file extension) , separated by commas'
        required: true
        type: string

concurrency:
  group: "delete-art-group"
  cancel-in-progress: false

permissions:
  actions: read
  contents: write

jobs:
  delete_art:
    runs-on: ubuntu-latest
    env:
      PROJECT_ROOT_PATH: 'projects/generative-art'
    # container:
    #   image: python:3.13.3-slim-bullseye # no have git installed
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: ./.github/actions/install-python
        with:
          requirements-file: $PROJECT_ROOT_PATH/requirements.txt

      - name: Delete Art
        working-directory: projects/generative-art
        run: |
          # Split the filenames input into an array
          FILENAMES="${{ github.event.inputs.filenames }}"
          CMD="python src/main.py delete-art"
          
          # Loop through each filename and add it as a -f flag
          IFS=',' read -ra FILE_ARRAY <<< "$FILENAMES"
          for FILE in "${FILE_ARRAY[@]}"; do
            CMD="$CMD -f $FILE"
          done

          echo "Running command: $CMD"
          eval $CMD

      - name: Generate README
        working-directory: projects/generative-art
        run: python src/main.py generate-readme

      - name: Commit and Push Deleted Art
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          git pull
          git add .
          git commit -m "art: delete generated art on ${{ github.event.inputs.filenames }}"
          git push
